import{r as a,j as _,A as S}from"./index-NHPz5pax.js";var r=(e=>(e.FETCH_TASKS_REQUEST="FETCH_TASKS_REQUEST",e.FETCH_TASKS_SUCCESS="FETCH_TASKS_SUCCESS",e.FETCH_TASKS_FAILURE="FETCH_TASKS_FAILURE",e.CREATE_TASK_REQUEST="CREATE_TASK_REQUEST",e.CREATE_TASK_SUCCESS="CREATE_TASK_SUCCESS",e.CREATE_TASK_FAILURE="CREATE_TASK_FAILURE",e.DELETE_TASKS_REQUEST="DELETE_TASKS_REQUEST",e.DELETE_TASKS_SUCCESS="DELETE_TASKS_SUCCESS",e.DELETE_TASKS_FAILURE="DELETE_TASKS_FAILURE",e.UPDATE_TASK_REQUEST="UPDATE_TASK_REQUEST",e.UPDATE_TASK_SUCCESS="UPDATE_TASK_SUCCESS",e.UPDATE_TASK_FAILURE="UPDATE_TASK_FAILURE",e.REORDER_TASKS="REORDER_TASKS",e))(r||{});const A={columns:{pending:{id:"pending",title:"Pending",taskIDs:["2"]},in_progress:{id:"in_progress",title:"In progress",taskIDs:["1"]},done:{id:"done",title:"Done",taskIDs:[]}},tasks:{1:{id:1,title:"Sample Task",description:"Sample description about the task which is to be completed",dueDate:"",state:"in_progress",assignee:void 0,assignedUserName:void 0},2:{id:2,title:"Another Sample Task",description:"Sample description about the task which is to be completed",dueDate:"",state:"pending",assignee:void 0,assignedUserName:void 0}},columnOrder:["pending","in_progress","done"]},n={projectData:A,isLoading:!1,isError:!1,errorMessage:""},p=(e=n,o)=>{switch(o.type){case r.FETCH_TASKS_REQUEST:return{...e,isLoading:!0};case r.FETCH_TASKS_SUCCESS:return console.log("HI"),{...e,isLoading:!1,projectData:o.payload};case r.FETCH_TASKS_FAILURE:return{...e,isLoading:!1,isError:!0,errorMessage:o.payload};case r.CREATE_TASK_REQUEST:return{...e,isLoading:!0};case r.CREATE_TASK_SUCCESS:return console.log("While Creating"),{...e,isLoading:!1};case r.CREATE_TASK_FAILURE:return{...e,isLoading:!1,isError:!0,errorMessage:o.payload};case r.REORDER_TASKS:return{...e,isLoading:!1,projectData:o.payload};default:case r.DELETE_TASKS_REQUEST:return{...e,isLoading:!0};case r.DELETE_TASKS_SUCCESS:return{...e,isLoading:!1};case r.DELETE_TASKS_FAILURE:return{...e,isLoading:!1,isError:!0,errorMessage:o.payload};case r.UPDATE_TASK_REQUEST:return{...e,isLoading:!0};case r.UPDATE_TASK_SUCCESS:return{...e,isLoading:!1};case r.UPDATE_TASK_FAILURE:return{...e,isLoading:!1,isError:!0,errorMessage:o.payload}}},d=a.createContext(n),i=a.createContext(()=>{}),c=({children:e})=>{const[o,t]=a.useReducer(p,n);return _.jsx(d.Provider,{value:o,children:_.jsx(i.Provider,{value:t,children:e})})},U=()=>a.useContext(d),R=()=>a.useContext(i),l=async(e,o,t)=>{const E=localStorage.getItem("authToken")??"";try{if(e({type:r.CREATE_TASK_REQUEST}),!(await fetch(`${S}/projects/${o}/tasks/`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${E}`},body:JSON.stringify(t)})).ok)throw new Error("Failed to create task");e({type:r.CREATE_TASK_SUCCESS}),T(e,o)}catch(s){console.error("Operation failed:",s),e({type:r.CREATE_TASK_FAILURE,payload:"Unable to create task"})}},u=(e,o)=>{e({type:r.REORDER_TASKS,payload:o})},T=async(e,o)=>{const t=localStorage.getItem("authToken")??"";try{e({type:r.FETCH_TASKS_REQUEST});const E=await fetch(`${S}/projects/${o}/tasks`,{headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`}});if(!E.ok)throw new Error("Failed to fetch tasks");const s=await E.json();e({type:r.FETCH_TASKS_SUCCESS,payload:s}),console.dir(s)}catch(E){console.error("Operation failed:",E),e({type:r.FETCH_TASKS_FAILURE,payload:"Unable to load tasks"})}},K=async(e,o,t)=>{const E=localStorage.getItem("authToken")??"";try{if(e({type:r.DELETE_TASKS_REQUEST}),!(await fetch(`${S}/projects/${o}/tasks/${t.id}`,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${E}`},body:JSON.stringify(t)})).ok)throw new Error("Failed to delete task");e({type:r.DELETE_TASKS_SUCCESS}),T(e,o)}catch(s){console.error("Operation failed:",s),e({type:r.DELETE_TASKS_FAILURE,payload:"Unable to delete task"})}},g=async(e,o,t)=>{const E=localStorage.getItem("authToken")??"";try{if(e({type:r.UPDATE_TASK_REQUEST}),!(await fetch(`${S}/projects/${o}/tasks/${t.id}`,{method:"PATCH",headers:{"Content-Type":"application/json",Authorization:`Bearer ${E}`},body:JSON.stringify(t)})).ok)throw new Error("Failed to update task");e({type:r.UPDATE_TASK_SUCCESS}),T(e,o)}catch(s){console.error("Operation failed:",s),e({type:r.UPDATE_TASK_FAILURE,payload:"Unable to update task"})}};export{c as T,g as a,U as b,T as c,K as d,l as e,u as r,R as u};
